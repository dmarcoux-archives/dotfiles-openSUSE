#!/bin/sh
#
# Xsetup:	Setup an xlogin's display
#
# Copyright (c) 1998-2003 SuSE GmbH Nuernberg, Germany.
# please report bugfixes or comments at http://www.suse.de/feedback.
#
# Author: Werner Fink,   <http://www.suse.de/feedback>
#
 LIBDIR=/usr/lib/X11
 ETCDIR=/etc/X11
 XDMDIR=${ETCDIR}/xdm
 BINDIR=/usr/bin

no_exit_on_failed_exec=1
type shopt >/dev/null 2>&1 && shopt -s execfail
set +e >/dev/null 2>&1

. /etc/sysconfig/displaymanager

#
# Check for cpp
#
cpp=-nocpp
type cpp >/dev/null 2>&1 && cpp=

#
# Background picture for plain xdm:
# Store your preferred picture in XPM format (see xv(1) or ppm(5))
# You can run gzip on the file BackGround.xpm to save disk space.
#
 background=${XDMDIR}/BackGround.xpm

#
# Special screensaver parameters for xset, see manual page xset(1x).
# Default is no special parameters.  Use DPMS (VESA Power Savings
# Protocol) if USEDPMS is set to "yes".
#
 SAVESC=""
 USEDPMS="no"

#
# Default settings
#
# Note: If you need a special key mapping copy Xmodmap.remote to
# Xmodmap.<full_qualified_domain_name_of_the_terminal> where the
# suffix is the full qualified name identical with  the value of
# the DISPLAY variable without `:0', `:1' ... e.g.
# Xmodmap.xterminal.uni-yx.de
#
# Note that xkb and xmodmap should not be mixed.

 sysmodmap=${ETCDIR}/Xmodmap
 defmodmap=${ETCDIR}/Xmodmap.remote
hostmodmap=${ETCDIR}/Xmodmap.${DISPLAY%:*}
 sysxkbmap=${ETCDIR}/Xkbmap
 defxkbmap=${ETCDIR}/Xkbmap.remote
hostxkbmap=${ETCDIR}/Xkbmap.${DISPLAY%:*}
      xset=${BINDIR}/xset
   xmodmap=${BINDIR}/xmodmap
    xkbmap=${BINDIR}/setxkbmap
   xkbcomp=${BINDIR}/xkbcomp
   xpmroot=${BINDIR}/xpmroot
    xsetbg=${BINDIR}/xsetbg
  xsetroot=${BINDIR}/xsetroot
  xconsole=${BINDIR}/xconsole
  xmessage=${BINDIR}/xmessage
      xrdb=${BINDIR}/xrdb
   backprg=${BINDIR}/BackGround
       qiv=${BINDIR}/qiv
#   halporp=/usr/bin/hal-find-by-property
     xvkbd=${BINDIR}/xvkbd
     xvkbdargs="-compact -geometry -0-0 -xdm -always-on-top -keyfile /usr/share/X11/app-defaults/xvkbd.default"

#
# Check if xdm is running
#
  xdmpid=/var/run/xdm.pid
 xdmroot=/usr/bin
     xdm=no

test -x ${xdmroot}/xdm && \
  /sbin/checkproc -p $xdmpid ${xdmroot}/xdm >/dev/null 2>&1 && xdm=yes

#
# Check if kdm is running
#
  kdmpid=/var/run/kdm.pid
kde3root=/opt/kde3/bin
kde4root=/usr/bin
     kdm=no

test -x ${kde3root}/kdm && \
  /sbin/checkproc -p $kdmpid ${kde3root}/kdm >/dev/null 2>&1 && kdm=yes
test -x ${kde4root}/kdm && \
  /sbin/checkproc -p $kdmpid ${kde4root}/kdm >/dev/null 2>&1 && kdm=yes

#
# Check if gdm is running
#
gnome2root=/usr/sbin
    gdmpid=/var/run/gdm.pid
       gdm=no

test -x ${gnome2root}/gdm && \
  /sbin/checkproc -p $gdmpid ${gnome2root}/gdm >/dev/null 2>&1 && gdm=yes

if test "$kdm" = "yes" -a -x ${BINDIR}/kvkbd; then
    xvkbd=${BINDIR}/kvkbd
    xvkbdargs=--loginhelper
fi

#
# Check if the machine is a TabletPC and start
# xvkbd in xdm do be able to input username and password 
# 
#$halporp --key system.formfactor.subtype --string tabletpc
#if test $? -eq 0 -a -x $xvkbd ; then
#    # Bug 149957, Bug #408736
#    ( declare -i t=100
#      while test $((t--)) -gt 0 ; do
#          case "$(xwininfo -root -children)" in
#            *greet*|xlogin) break ;;
#          esac
#          sleep 0.1
#      done
#      HOME=/root exec $xvkbd $xvkbdargs
#    ) & echo $! > /var/run/xvkbd.pid
#fi

#
# Handle background:
#   First kdm/gdm choise, then xdm/user choise and
#   if no choise is given use the system defaults.
#
if test "$xdm" = "no" ; then
    : # $xsetroot -solid '#738dc6'
elif test -s ${background}.gz -a -x $xpmroot ; then
    $xpmroot ${background}.gz
elif test -s ${background}    -a -x $xpmroot ; then
    $xpmroot $background
elif test -s ${background}    -a -x $xsetbg ; then
    $xsetbg $background
elif test -s ${background}    -a -x $qiv ; then
    $qiv  -x $background
elif test -x $backprg ; then
    $backprg
else
    $xsetroot -gray
fi

#
# Enable Numlock if set
#
if test -r /var/run/numlock-on && type numlockx >/dev/null 2>&1; then
    numlockx on
fi

#
# Xresources
#
if test "$xdm" = "yes" ; then
    $xrdb $cpp -override -retain <<-'EOF'
	#ifdef COLOR
	*Foreground: black
	*Background: #cdd2b4
	#endif
	EOF
else
    $xrdb $cpp -override -retain ${ETCDIR}/Xresources
fi

#
# Screensaver
#
if test -x $xset ; then
    $xset s on
    test -n "$SAVESC"       && $xset s $SAVESC
    test "$USEDPMS" = "yes" && $xset +dpms
fi

#
# Set keymap for various displays
#
if test -x $xmodmap -o -x $xkbcomp ; then
    if test -z "${DISPLAY%:*}" ; then
	# local connection
	if test -s $sysxkbmap -a -x $xkbcomp ; then
	    cat $sysxkbmap | $xkbcomp - $DISPLAY
	elif test -r $sysmodmap ; then
	    $xmodmap $sysmodmap
	fi
    else
	# TCP/IP connection (remote or local)
	if test -s $defxkbmap -a -x $xkbcomp ; then
	    cat $defxkbmap | $xkbcomp - $DISPLAY
	elif test -r $defmodmap ; then
	    $xmodmap $defmodmap
	fi
	if test -s $hostxkbmap -a -x $xkbcomp ; then
	    cat $hostxkbmap | $xkbcomp - $DISPLAY
	elif test -r $hostmodmap ; then
	    $xmodmap $hostmodmap
	fi
    fi
fi

exit 0
